# Copyright 2019 Edouard Maleix, read LICENSE

worker_processes 8;

events { 
  worker_connections 2048; 
}

http {

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  map $status $loggable {
    ~^[23]  0;
    default 1;
  }

  map $remote_addr $proxy_forwarded_elem {
    # IPv4 addresses can be sent as-is
    ~^[0-9.]+$          "for=$remote_addr";

    # IPv6 addresses need to be bracketed and quoted
    ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

    # Unix domain socket names cannot be represented in RFC 7239 syntax
    default             "for=unknown";
	}

  map $http_forwarded $proxy_add_forwarded {
    # If the incoming Forwarded header is syntactically valid, append to it
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

    # Otherwise, replace it
    default "$proxy_forwarded_elem";
	}

  #upstream aloes_clients {
  #  server client:${HTTP_CLIENT_PORT};
  #}

  upstream aloes_http_api_servers {
    least_conn;
    server http-api-1:${HTTP_SERVER_PORT} max_fails=3 fail_timeout=15s;
    server http-api-2:${HTTP_SERVER_PORT};
    server http-api-3:${HTTP_SERVER_PORT};
  }

  upstream aloes_ws_api_servers {
    least_conn;
    server mqtt-api-1:${WS_BROKER_PORT};
    server mqtt-api-2:${WS_BROKER_PORT};
  }

  server {
    listen ${NGINX_HTTP_SERVER_PORT};
    listen [::]:${NGINX_HTTP_SERVER_PORT} ipv6only=on;
    # server_name ${NGINX_HTTP_SERVER_HOST};

    #location / {
    #  proxy_pass http://aloes_clients;
    #  proxy_redirect off;
    #  proxy_set_header Host $http_host;
    #  proxy_set_header X-Real-IP $remote_addr;
    #  proxy_set_header X-Scheme $scheme;
    #  proxy_http_version 1.1;
    #}

    location /app/ {
      proxy_pass http://aloes_http_api_servers/;
      proxy_redirect off;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Real-Port $remote_port;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header Forwarded $proxy_add_forwarded;
      proxy_set_header X-Forwarded-For "";
      proxy_http_version 1.1;
      access_log /etc/nginx/log/http-access-${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m;
      # access_log /etc/nginx/log/http-access-${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m if=$loggable;
      error_log /etc/nginx/log/http-error-${NGINX_HTTP_SERVER_HOST}.log warn;
    }  

    location /ws {
      proxy_pass http://aloes_ws_api_servers;
      proxy_redirect off;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Real-Port $remote_port;
      proxy_set_header X-Scheme $scheme;
      # see https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Forwarded $proxy_add_forwarded;
      proxy_set_header X-Forwarded-For "";
      proxy_http_version 1.1;
      access_log /etc/nginx/log/ws-access-${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m;
      error_log /etc/nginx/log/ws-error-${NGINX_HTTP_SERVER_HOST}.log warn;
    }  
	}
}

stream {
  log_format mqtt '$remote_addr [$time_local] $protocol $status $bytes_received ' 
              '$bytes_sent $upstream_addr';

  access_log /etc/nginx/log/mqtt-access-local-${NGINX_HTTP_SERVER_HOST}.log mqtt buffer=32k flush=1m;
  error_log /etc/nginx/log/mqtt-error-local-${NGINX_HTTP_SERVER_HOST}.log; # Health check notifications

  upstream aloes_mqtt_api_servers {
    least_conn;
    server mqtt-api-1:${MQTT_BROKER_PORT};
    server mqtt-api-2:${MQTT_BROKER_PORT};
  }

  server {
    # listen ${MQTT_BROKER_PORT} so_keepalive=on;
    listen ${MQTT_BROKER_PORT};
    listen [::]:${MQTT_BROKER_PORT} ipv6only=on;
    proxy_pass aloes_mqtt_api_servers;
    proxy_connect_timeout 2s;
    proxy_timeout 60s;
    # proxy_bind $remote_addr transparent;
  }

}