worker_processes 8;

events { 
	worker_connections 2048; 
}

http {

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	map $status $loggable {
	    ~^[23]  0;
	    default 1;
	}

	upstream aloes_http_api_servers {
	    least_conn;
	    # ip_hash;
		server http-api:${HTTP_SERVER_PORT} max_fails=3 fail_timeout=15s;
	    server http-api-2:${HTTP_SERVER_PORT};
	    server http-api-3:${HTTP_SERVER_PORT};
	}

	upstream aloes_ws_api_servers {
	    least_conn;
	    server mqtt-api:${WS_BROKER_PORT};
	    server mqtt-api-2:${WS_BROKER_PORT};
	}

	server {
	    listen ${NGINX_HTTP_SERVER_PORT};
	    listen [::]:${NGINX_HTTP_SERVER_PORT};
        
        # server_name  aloes;

 		# location / {
	    # }

	    location /app/ {
	        proxy_pass http://aloes_http_api_servers/;
	        proxy_redirect off;
	        proxy_http_version 1.1;
	       	access_log /etc/nginx/log/http-access.${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m;
			# access_log /etc/nginx/log/http-access.${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m if=$loggable;
		   	error_log /etc/nginx/log/http-error.${NGINX_HTTP_SERVER_HOST}.log warn;

	    }  

	    location /ws {
			proxy_pass http://aloes_ws_api_servers;
	        proxy_redirect off;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
           	# access_log /etc/nginx/log/ws-access.${NGINX_HTTP_SERVER_HOST}.log combined buffer=32k flush=1m;
           	# error_log /etc/nginx/log/ws-error.${NGINX_HTTP_SERVER_HOST}.log warn;
	    }  
	}

}

stream {
	
	log_format mqtt '$remote_addr [$time_local] $protocol $status $bytes_received ' 
                	'$bytes_sent $upstream_addr';

	access_log /etc/nginx/log/mqtt-access.${NGINX_HTTP_SERVER_HOST}.log mqtt;
   	error_log /etc/nginx/log/mqtt-error.${NGINX_HTTP_SERVER_HOST}.log;

	upstream aloes_mqtt_api_servers {
	    least_conn;
	    server mqtt-api:${MQTT_BROKER_PORT};
	    server mqtt-api-2:${MQTT_BROKER_PORT};
	}
	
	server {
	    # listen ${MQTT_BROKER_PORT} so_keepalive=on;
	    listen ${MQTT_BROKER_PORT};

	    proxy_pass aloes_mqtt_api_servers;
	    # proxy_bind $remote_addr transparent;
	    proxy_connect_timeout 2s;
	    proxy_timeout 120s;

	}

}