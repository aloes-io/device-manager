{
  "name": "device-manager",
  "version": "1.0.0",
  "main": "index.js",
  "engines": {
    "node": ">=9.0.0",
    "npm": ">=6.0.0"
  },
  "scripts": {
    "lint": "npx eslint --ext js .",
    "docs:services": "./node_modules/.bin/jsdoc2md ./src/services/* > ./docs/services/README.md",
    "docs:models": "./node_modules/.bin/jsdoc2md ./src/models/* > ./docs/api/README.md",
    "docs:md": "npm run docs:services ; npm run docs:models",
    "docs:dev": "npm run docs:md ; cp ./README.md ./docs/readme/. ; ./node_modules/.bin/vuepress dev docs",
    "docs:build": "npm run docs:md ; cp ./README.md ./docs/readme/. ; ./node_modules/.bin/vuepress build docs",
    "docs:serve": "light-server -s public -p 7000 --servePrefix /device-manager/",
    "clean": "rm -rf dist && mkdir dist",
    "build": "npm run clean ; npx babel src --out-dir dist --copy-files",
    "build:docker": "cp deploy/.env_docker .env && docker-compose --compatibility build",
    "test:user": "cp deploy/.env_development .env ; npm run build ; export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/user.e2e.test.js",
    "test:address": "cp deploy/.env_development .env ; npm run build ;  export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/address.e2e.test.js",
    "test:files": "cp deploy/.env_development .env ; npm run build ; export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/files.e2e.test.js",
    "test:device": "cp deploy/.env_development .env ; npm run build ; export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/device.e2e.test.js",
    "test:sensor": "cp deploy/.env_development .env ; npm run build ; export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/sensor.e2e.test.js",
    "test": "cp deploy/.env_development .env ; npm run build; export NODE_ENV=development ; ./node_modules/.bin/nyc mocha ./dist/**/*.test.js",
    "test:docker:build": "cp deploy/.env_development .env ; docker-compose -f docker-compose-test.yml --compatibility build",
    "test:docker": "npm run test:docker:build ; docker-compose -f docker-compose-test.yml --compatibility run api",
    "test:docker2": "npm run test:docker:build ; docker-compose -f docker-compose-test.yml --compatibility up --exit-code-from api",
    "start": "cp deploy/.env_development .env ; ./node_modules/.bin/babel-node ./src/index.js",
    "start:dev": "cp deploy/.env_development .env ; npm run build && NODE_ENV=development node ./nodemon.js",
    "start:local": "cp deploy/.env_local .env ; npm run build && NODE_ENV=local node ./nodemon.js",
    "start:stage": "cp deploy/.env_staging .env ; npm run build && NODE_ENV=staging node ./nodemon.js",
    "start:pm2": "cp deploy/.env_local .env ; npm run build ; node ./pm2-local.js --start",
    "start:pm2:stage": "cp deploy/.env_staging .env ; npm run build ; node ./pm2-local.js --start",
    "start:pm2:prod": "cp deploy/.env_production .env ; npm run build ; node ./pm2-local.js --start",
    "stop:pm2": "node ./pm2-local.js --stop",
    "log:pm2": "./node_modules/.bin/pm2 log",
    "start:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility up -d",
    "stop:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility down",
    "log:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility logs --follow --tail='100'",
    "log:docker:api": "cp deploy/.env_docker .env ; docker-compose logs -f --tail='100' api"
  },
  "dependencies": {
    "@babel/runtime": "^7.4.4",
    "aedes": "^0.38.1",
    "aedes-persistence-redis": "^6.0.0",
    "ajv": "^6.10.2",
    "aloes-handlers": "^1.2.11",
    "aloes-light-handlers": "^1.0.7",
    "async-mqtt": "^2.4.2",
    "axios": "^0.19.0",
    "body-parser": "^1.18.3",
    "colors": "^1.3.3",
    "compression": "^1.0.3",
    "connect-ensure-login": "^0.1.1",
    "cookie-parser": "^1.4.4",
    "cors": "^2.5.2",
    "cron": "^1.7.1",
    "dotenv": "^6.2.0",
    "ejs": "^2.6.1",
    "express": "^4.16.2",
    "express-flash": "0.0.2",
    "express-history-api-fallback": "^2.2.1",
    "express-http-proxy": "^1.5.0",
    "express-session": "^1.15.6",
    "file-type": "^12.0.1",
    "helmet": "^3.21.1",
    "http-server": "^0.11.1",
    "ioredis": "^4.11.2",
    "iot-agent": "^1.0.8",
    "localtunnel": "^1.9.2",
    "lodash.debounce": "^4.0.8",
    "loopback": "^3.26.0",
    "loopback-boot": "^3.3.1",
    "loopback-component-explorer": "^6.4.0",
    "loopback-component-passport": "^3.10.0",
    "loopback-component-storage": "^3.6.2",
    "loopback-connector-influxdata": "^0.4.1",
    "loopback-connector-kv-redis": "^3.0.1",
    "loopback-connector-mongodb": "^3.8.0",
    "loopback-connector-redis": "^3.0.0",
    "loopback-connector-rest": "^3.3.0",
    "loopback-ds-timestamp-mixin": "^3.4.1",
    "moment": "^2.22.2",
    "moment-recur": "^1.0.7",
    "mqemitter-redis": "^3.0.0",
    "node-cleanup": "^2.1.2",
    "node-geocoder": "^3.22.0",
    "nodemon": "^1.18.8",
    "oma-json": "^1.0.6",
    "papaparse": "^5.1.0",
    "passport": "^0.4.0",
    "passport-github": "^1.1.0",
    "passport-local": "^1.0.0",
    "pm2": "^3.5.1",
    "redis": "^2.8.0",
    "request": "^2.88.0",
    "shuffle": "^0.2.2",
    "simple-json-filter": "^0.3.0",
    "strong-error-handler": "^2.0.0",
    "text-table": "^0.2.0",
    "uid": "0.0.2",
    "util": "^0.12.0",
    "websocket-stream": "^5.5.0",
    "weighted": "^0.3.0",
    "yargs": "^13.2.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.6.3",
    "@babel/node": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/plugin-transform-runtime": "^7.4.4",
    "@babel/preset-env": "^7.0.0",
    "acorn": "^6.1.0",
    "aedes-persistence": "^7.1.1",
    "babel-eslint": "^8.2.6",
    "chai": "^4.2.0",
    "connect-history-api-fallback": "^1.5.0",
    "eslint": "^4.19.1",
    "eslint-config-airbnb-base": "^11.3.0",
    "eslint-config-loopback": "^8.0.0",
    "eslint-config-prettier": "^3.1.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.9.0",
    "eslint-plugin-prettier": "^2.6.2",
    "eslint-plugin-vue": "^4.0.0",
    "fastparallel": "^2.3.0",
    "form-data": "^2.5.1",
    "identity-obj-proxy": "^3.0.0",
    "jsdoc-to-markdown": "^5.0.0",
    "lb-declarative-e2e-test": "^0.5.0",
    "light-server": "^2.6.0",
    "mocha": "^6.2.0",
    "mqemitter": "^3.0.0",
    "mqtt": "^3.0.0",
    "nyc": "^14.1.1",
    "prettier": "1.16.1",
    "tfilter": "^1.0.1",
    "through2": "^2.0.3",
    "tmp": "0.0.33",
    "vuepress": "^1.0.0-alpha.47"
  },
  "babel": {
    "presets": [
      "@babel/preset-env"
    ],
    "plugins": [
      "@babel/plugin-syntax-dynamic-import",
      "@babel/plugin-syntax-import-meta",
      "@babel/plugin-proposal-class-properties",
      "@babel/plugin-proposal-json-strings",
      [
        "@babel/plugin-proposal-decorators",
        {
          "legacy": true
        }
      ],
      "@babel/plugin-proposal-function-sent",
      "@babel/plugin-proposal-export-namespace-from",
      "@babel/plugin-proposal-numeric-separator",
      "@babel/plugin-proposal-throw-expressions",
      "@babel/plugin-transform-runtime"
    ]
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "es6": true,
      "node": true
    },
    "extends": [
      "airbnb-base",
      "loopback",
      "prettier"
    ],
    "plugins": [
      "babel",
      "prettier"
    ],
    "parserOptions": {
      "ecmaVersion": 2018,
      "parser": "babel-eslint"
    },
    "rules": {
      "import/no-unresolved": "off",
      "import/extensions": "off",
      "import/prefer-default-export": "off",
      "no-param-reassign": "off",
      "one-var-declaration-per-line": "off",
      "prettier/prettier": "error"
    },
    "globals": {
      "require": true
    }
  },
  "eslintIgnore": [
    "/public/",
    "/dist/",
    "/deploy/",
    "/docs/",
    "/logs/",
    "/storage/",
    "/node_modules/"
  ],
  "prettier": {
    "bracketSpacing": true,
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "jsxBracketSameLine": true,
    "trailingComma": "all"
  },
  "mocha": {
    "recursive": true,
    "check-leaks": true,
    "delay": true,
    "globals": "__core-js_shared__,fetch,Response,Headers,Request,STRONGLOOP_GLB"
  },
  "repository": {
    "type": "git",
    "url": "https://framagit.org/aloes/device-manager"
  },
  "license": "",
  "description": "IoT at work",
  "extended": true
}
