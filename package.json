{
  "name": "device-manager",
  "version": "1.0.0",
  "main": "src/index.js",
  "engines": {
    "node": ">=10.0.0",
    "npm": ">=6.0.0"
  },
  "scripts": {
    "lint": "npx eslint --ext js .",
    "docs:services": "./node_modules/.bin/jsdoc2md ./src/services/* ./src/lib/* > ./docs/services/README.md",
    "docs:models": "./node_modules/.bin/jsdoc2md ./src/models/* ./src/lib/* > ./docs/api/README.md",
    "docs:md": "npm run docs:services ; npm run docs:models",
    "docs:dev": "npm run docs:md ; cp ./README.md ./docs/readme/. ; ./node_modules/.bin/vuepress dev docs",
    "docs:build": "npm run docs:md ; cp ./README.md ./docs/readme/. ; ./node_modules/.bin/vuepress build docs",
    "docs:serve": "light-server -s public -p 7000 --servePrefix /device-manager/",
    "clean": "rm -rf dist && mkdir dist",
    "build": "npm run clean ; npx babel src --out-dir dist --copy-files",
    "build:docker": "cp deploy/.env_docker .env ; docker-compose build",
    "build:docker:prod": "cp deploy/.env_docker .env ; docker-compose --compatibility -f docker-compose-production.yml build",
    "build:test": "cp deploy/.env_development .env ; export NODE_ENV=development",
    "build:test:docker": "docker-compose -f docker-compose-test.yml --compatibility build",
    "test:address": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/address.e2e.test.js",
    "test:application": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/application.e2e.test.js",
    "test:device": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/device.e2e.test.js",
    "test:files": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/files.e2e.test.js",
    "test:sensor": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/sensor.e2e.test.js",
    "test:scheduler": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/scheduler.e2e.test.js",
    "test:user": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/user.e2e.test.js",
    "test": "npm run build:test ; ./node_modules/.bin/mocha ./src/**/*.test.js",
    "test:cover": "npm run build:test ; ./node_modules/.bin/nyc ./node_modules/.bin/mocha ./src/**/*.test.js",
    "test:docker": "npm run build:test:docker ; docker-compose -f docker-compose-test.yml --compatibility run --rm api",
    "test:docker2": "npm run build:test:docker ; docker-compose -f docker-compose-test.yml --compatibility up --exit-code-from api",
    "start": "cp deploy/.env_development .env ; npm run build && NODE_ENV=development node ./bin/nodemon.js",
    "start:local": "cp deploy/.env_local .env ; npm run build && NODE_ENV=local node ./bin/nodemon.js",
    "start:stage": "cp deploy/.env_staging .env ; npm run build && NODE_ENV=staging node ./bin/nodemon.js",
    "start:pm2": "cp deploy/.env_local .env ; npm run build ; node ./bin/pm2-local.js --start",
    "start:pm2:stage": "cp deploy/.env_staging .env ; npm run build ; node ./bin/pm2-local.js --start",
    "start:pm2:prod": "cp deploy/.env_production .env ; npm run build ; node ./bin/pm2-local.js --start",
    "stop:pm2": "node ./bin/pm2-local.js --stop ; node ./bin/pm2-local.js --delete",
    "log:pm2": "./node_modules/.bin/pm2 log",
    "start:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility up -d",
    "start:docker:clean": "cp deploy/.env_docker .env ; docker-compose --compatibility up -d --remove-orphans",
    "start:docker:prod": "cp deploy/.env_docker .env ; docker-compose --compatibility -f docker-compose-production.yml up -d",
    "stop:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility down",
    "stop:docker:prod": "cp deploy/.env_docker .env ; docker-compose --compatibility -f docker-compose-production.yml down",
    "log:docker": "cp deploy/.env_docker .env ; docker-compose --compatibility logs --follow --tail='100'",
    "log:docker:prod": "cp deploy/.env_docker .env ; docker-compose --compatibility -f docker-compose-production.yml logs --follow --tail='100'"
  },
  "pre-commit": {
    "run": [
      "lint",
      "test:cover"
    ],
    "silent": false
  },
  "dependencies": {
    "aedes": "git+https://git@github.com/moscajs/aedes.git#master",
    "aedes-protocol-decoder": "^1.0.0",
    "aedes-persistence-redis": "^6.0.1",
    "aloes-handlers": "^1.2.13",
    "aloes-light-handlers": "^1.0.8",
    "async-mqtt": "^2.4.2",
    "axios": "^0.19.2",
    "body-parser": "^1.10.0",
    "colors": "^1.4.0",
    "compression": "^1.7.4",
    "connect-ensure-login": "^0.1.1",
    "cookie-parser": "^1.4.4",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "ejs": "^3.0.1",
    "express": "^4.17.1",
    "express-flash": "0.0.2",
    "express-history-api-fallback": "^2.2.1",
    "express-session": "^1.17.0",
    "file-type": "^13.1.2",
    "helmet": "^3.21.2",
    "ioredis": "^4.14.1",
    "iot-agent": "^1.0.10",
    "localtunnel": "^2.0.0",
    "lodash.debounce": "^4.0.8",
    "lodash.throttle": "^4.1.1",
    "loopback": "^3.26.0",
    "loopback-boot": "^3.3.1",
    "loopback-component-explorer": "^6.5.0",
    "loopback-component-passport": "^3.11.0",
    "loopback-component-storage": "^3.6.3",
    "loopback-connector-influxdata": "^0.4.1",
    "loopback-connector-kv-redis": "^3.0.2",
    "loopback-connector-mongodb": "^3.8.0",
    "loopback-connector-rest": "^3.6.0",
    "loopback-datasource-juggler": "^4.18.0",
    "loopback-ds-timestamp-mixin": "^3.4.1",
    "mqemitter-redis": "^3.0.0",
    "node-cleanup": "^2.1.2",
    "node-geocoder": "^3.25.0",
    "nodemon": "^2.0.2",
    "oma-json": "^1.0.7",
    "papaparse": "^5.1.1",
    "passport": "^0.4.1",
    "passport-github": "^1.1.0",
    "passport-local": "^1.0.0",
    "pm2": "^4.2.3",
    "rate-limiter-flexible": "^1.3.2",
    "redis": "^2.8.0",
    "request": "^2.88.0",
    "shuffle": "^0.2.2",
    "simple-json-filter": "^0.3.0",
    "strong-error-handler": "^3.4.0",
    "swagger-ui": "^3.25.0",
    "text-table": "^0.2.0",
    "uid": "0.0.2",
    "validator": "^12.0.0",
    "websocket-stream": "^5.5.0",
    "weighted": "^0.3.0",
    "yargs": "^13.2.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.6.3",
    "@babel/node": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.0.0",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/plugin-transform-runtime": "^7.4.4",
    "@babel/preset-env": "^7.0.0",
    "@babel/register": "^7.6.2",
    "@istanbuljs/nyc-config-babel": "^2.1.1",
    "acorn": "^6.1.0",
    "aedes-persistence": "^7.1.1",
    "babel-eslint": "^8.2.6",
    "babel-plugin-istanbul": "^5.2.0",
    "chai": "^4.2.0",
    "connect-history-api-fallback": "^1.5.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb-base": "^11.3.0",
    "eslint-config-loopback": "^8.0.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.9.0",
    "eslint-plugin-prettier": "^2.6.2",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-vue": "^4.0.0",
    "fastparallel": "^2.3.0",
    "form-data": "^2.5.1",
    "identity-obj-proxy": "^3.0.0",
    "jsdoc-to-markdown": "^5.0.0",
    "lb-declarative-e2e-test": "^0.5.0",
    "light-server": "^2.6.0",
    "mocha": "^6.2.0",
    "mqemitter": "^3.0.0",
    "mqtt": "^3.0.0",
    "nyc": "^14.1.1",
    "pre-commit": "^1.2.2",
    "prettier": "1.16.1",
    "tfilter": "^1.0.1",
    "through2": "^2.0.3",
    "tmp": "0.0.33",
    "vuepress": "^1.3.0"
  },
  "babel": {
    "presets": [
      "@babel/preset-env"
    ],
    "plugins": [
      "@babel/plugin-syntax-dynamic-import",
      "@babel/plugin-syntax-import-meta",
      "@babel/plugin-proposal-class-properties",
      "@babel/plugin-proposal-json-strings",
      [
        "@babel/plugin-proposal-decorators",
        {
          "legacy": true
        }
      ],
      "@babel/plugin-proposal-function-sent",
      "@babel/plugin-proposal-export-namespace-from",
      "@babel/plugin-proposal-numeric-separator",
      "@babel/plugin-proposal-throw-expressions",
      "@babel/plugin-transform-runtime",
      "istanbul"
    ]
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "es6": true,
      "node": true
    },
    "extends": [
      "airbnb-base",
      "loopback",
      "prettier",
      "plugin:security/recommended"
    ],
    "plugins": [
      "babel",
      "prettier",
      "security"
    ],
    "parserOptions": {
      "ecmaVersion": 2018,
      "parser": "babel-eslint"
    },
    "rules": {
      "import/no-unresolved": "off",
      "import/extensions": "off",
      "import/prefer-default-export": "off",
      "no-param-reassign": "off",
      "one-var-declaration-per-line": "off",
      "prettier/prettier": "error"
    },
    "globals": {
      "require": true
    }
  },
  "eslintIgnore": [
    "/public/",
    "/dist/",
    "/deploy/",
    "/docs/",
    "/logs/",
    "/storage/",
    "/node_modules/"
  ],
  "prettier": {
    "bracketSpacing": true,
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "jsxBracketSameLine": true,
    "trailingComma": "all"
  },
  "mocha": {
    "require": [
      "@babel/register"
    ],
    "recursive": true,
    "check-leaks": true,
    "delay": true,
    "bail": false,
    "slow": 500,
    "reporter": "spec",
    "globals": "__core-js_shared__,fetch,Response,Headers,Request,STRONGLOOP_GLB"
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-babel",
    "reporter": [
      "lcov",
      "text"
    ],
    "report-dir": "./test",
    "check-coverage": true,
    "functions": 60,
    "lines": 50
  },
  "repository": {
    "type": "git",
    "url": "https://framagit.org/aloes/device-manager"
  },
  "license": "AGPL-3.0-or-later",
  "author": "Edouard Maleix <ed@getlarge.eu> (https://getlarge.eu)",
  "contributors": [
    "Edouard Maleix <ed@getlarge.eu> (https://getlarge.eu)"
  ],
  "description": "IoT at work",
  "extended": true
}
