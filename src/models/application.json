{
  "name": "Application",
  "plural": "Applications",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "allowEternalTokens": true
  },
  "properties": {
    "name": {
      "type": "string",
      "default": "",
      "required": false
    },
    "description": {
      "type": "string",
      "default": "",
      "required": false
    },
    "icon": {
      "type": "string",
      "default": null,
      "required": false
    },
    "frameCounter": {
      "type": "number",
      "required": true,
      "default": 0
    },
    "accessPointUrl": {
      "type": "string",
      "default": null,
      "required": false
    },
    "transportProtocol": {
      "type": "string",
      "required": false,
      "default": null
    },
    "transportProtocolVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "appEui": {
      "type": "string",
      "required": true,
      "default": null,
      "unique": true
    },
    "apiKey": {
      "type": "string",
      "required": false
    },
    "clientKey": {
      "type": "string",
      "required": false
    },
    "pattern": {
      "type": "string",
      "required": false,
      "default": null
    },
    "validators": {
      "type": "object",
      "required": false
    },
    "public": {
      "type": "boolean",
      "default": false
    },
    "clients": {
      "type": "array",
      "description": "A list of client ids authentified as this device",
      "default": []
    }
  },
  "hidden": [],
  "protected": ["appEui", "clientKey", "apiKey", "clients"],
  "validations": [],
  "relations": {
    "user": {
      "type": "belongsTo",
      "model": "user",
      "foreignKey": "ownerId",
      "options": {
        "nestRemoting": false
      }
    },
    "collaborators": {
      "type": "referencesMany",
      "description": "A list of users ids who have permissions to use this device",
      "model": "user",
      "foreignKey": "userIds",
      "options": {
        "validate": true,
        "forceId": false,
        "persistent": true
      }
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW",
      "property": [
        "find",
        "findById",
        "count",
        "exists",
        "patchAttributes",
        "updateAttributes",
        "replaceAttributes",
        "replaceById",
        "destroyById",
        "deleteById",
        "delete",
        "onPublish",
        "__get__collaborators",
        "__create__collaborators",
        "__add__collaborators",
        "__findById__collaborators",
        "__updateById__collaborators",
        "__destroyById__collaborators"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": ["updateStatus", "authenticate", "getState", "getFullState"]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": ["create", "find", "count", "exists", "refreshToken", "onPublish"]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$collaborator",
      "permission": "ALLOW",
      "property": ["findById", "replaceById", "replaceOrCreate", "exists"]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW",
      "property": [
        "replaceById",
        "destroyById",
        "deleteById",
        "replaceOrCreate",
        "updateById",
        "updateAttributes",
        "patchAttributes",
        "upsert",
        "exists",
        "find",
        "findById",
        "refreshToken",
        "__get__collaborators",
        "__create__collaborators",
        "__add__collaborators",
        "__findById__collaborators",
        "__updateById__collaborators",
        "__destroyById__collaborators"
      ]
    }
  ],
  "methods": {
    "onPublish": {
      "description": ["MQTT piping to Application model"],
      "accepts": [
        {
          "arg": "pattern",
          "type": "object",
          "required": true
        },
        {
          "arg": "packet",
          "type": "object",
          "required": true
        },
        {
          "arg": "client",
          "type": "object",
          "required": false
        }
      ],
      "returns": {
        "arg": "application",
        "type": "object",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/on-publish"
      }
    },
    "updateStatus": {
      "description": ["Update MQTT client attached to an application"],
      "accepts": [
        {
          "arg": "client",
          "type": "object",
          "required": true
        },
        {
          "arg": "status",
          "type": "boolean",
          "required": true
        }
      ],
      "returns": {
        "arg": "application",
        "type": "object",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/update-status"
      }
    },
    "refreshToken": {
      "description": ["Refresh or create API key"],
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        },
        {
          "arg": "appId",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "arg": "application",
        "type": "object"
      },
      "http": {
        "verb": "post",
        "path": "/refresh-token/:appId"
      }
    },
    "authenticate": {
      "description": ["End point for application authentification with APIKey"],
      "accepts": [
        {
          "arg": "appId",
          "type": "string",
          "required": true
        },
        {
          "arg": "apiKey",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "string"
      },
      "http": {
        "verb": "post",
        "path": "/authenticate"
      }
    },
    "getState": {
      "description": ["End point for application requesting their own state"],
      "accepts": [
        {
          "arg": "appId",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "get",
        "path": "/get-state/:appId"
      }
    }
  }
}
