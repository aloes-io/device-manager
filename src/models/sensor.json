{
  "name": "Sensor",
  "base": "PersistedModel",
  "plural": "Sensors",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "properties": {
    "name": {
      "type": "string",
      "required": true,
      "description": "example Digital Input"
    },
    "type": {
      "type": "number",
      "required": true,
      "description": "IPSO object ID, for example 3300"
    },
    "devEui": {
      "type": "string",
      "required": true,
      "default": null
    },
    "resources": {
      "type": "object",
      "required": false,
      "description": "Object with IPSO resource IDs as keys, example { '5700' : '5', '5701': 'Â°C'}",
      "default": null
    },
    "value": {
      "type": "any",
      "required": false,
      "description": "last measurement",
      "default": null
    },
    "createdAt": {
      "type": "date",
      "required": false
    },
    "lastSignal": {
      "type": "date",
      "required": false
    },
    "resource": {
      "type": "number",
      "required": false,
      "description": "ipso resource id - measurement",
      "default": null
    },
    "frameCounter": {
      "type": "number",
      "required": true,
      "default": 0
    },
    "icons": {
      "type": "array",
      "required": true,
      "description": "url pointing to icon image"
    },
    "colors": {
      "type": "object",
      "required": false
    },
    "transportProtocol": {
      "type": "string",
      "required": true,
      "default": ""
    },
    "transportProtocolVersion": {
      "type": "string",
      "required": false,
      "default": ""
    },
    "messageProtocol": {
      "type": "string",
      "required": true,
      "default": null
    },
    "messageProtocolVersion": {
      "type": "string",
      "required": false,
      "default": ""
    },
    "nativeSensorId": {
      "type": "string",
      "required": true,
      "default": "0"
    },
    "nativeNodeId": {
      "type": "string",
      "required": false,
      "default": "0"
    },
    "nativeType": {
      "type": "number",
      "required": true,
      "description": "original sensor type",
      "default": 0
    },
    "nativeResource": {
      "type": "number",
      "required": false,
      "description": "original resource type",
      "default": ""
    },
    "outputPath": {
      "type": "string",
      "required": false,
      "default": null
    },
    "inputPath": {
      "type": "string",
      "required": false,
      "default": null
    },
    "inPrefix": {
      "type": "string",
      "required": false,
      "default": null
    },
    "outPrefix": {
      "type": "string",
      "required": false,
      "default": null
    }
  },
  "hidden": [],
  "validations": [],
  "relations": {
    "user": {
      "type": "belongsTo",
      "model": "user",
      "foreignKey": "ownerId",
      "options": {
        "nestRemoting": false
      }
    },
    "device": {
      "type": "belongsTo",
      "model": "Device",
      "foreignKey": "deviceId",
      "options": {
        "nestRemoting": false
      }
    },
    "measurements": {
      "type": "hasMany",
      "model": "Measurement",
      "foreignKey": "sensorId"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW",
      "property": [
        "create",
        "find",
        "findById",
        "count",
        "exists",
        "patchAttributes",
        "updateAttributes",
        "replaceAttributes",
        "replaceById",
        "destroyById",
        "deleteById",
        "delete",
        "__get__measurements",
        "__findById__measurements",
        "__create__measurements",
        "__destroyById__measurements",
        "__get__resources",
        "__findById__resources",
        "__create__resources",
        "__replace__resources",
        "__replaceById__resources",
        "__delete__resources",
        "__destroyById__resources"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": [
        "create",
        "count",
        "exists",
        "search",
        "export",
        "onPublish",
        "findById",
        "__get__measurements",
        "__get__resources"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW",
      "property": [
        "destroyById",
        "deleteById",
        "replaceOrCreate",
        "replaceById",
        "updateById",
        "updateAttributes",
        "patchAttributes",
        "upsert",
        "exists",
        "findById",
        "onPublish",
        "count",
        "delete",
        "__get__measurements",
        "__findById__measurements",
        "__create__measurements",
        "__destroyById__measurements",
        "__get__resources",
        "__findById__resources",
        "__create__resources",
        "__replace__resources",
        "__replaceById__resources",
        "__delete__resources",
        "__destroyById__resources"
      ]
    }
  ],
  "methods": {
    "compose": {
      "description": ["Compose a valid sensor instance from parsed device payload"],
      "accepts": [
        {
          "arg": "device",
          "type": "object",
          "required": true
        },
        {
          "arg": "encoded",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "sensor",
        "type": "object"
      },
      "http": {
        "verb": "post",
        "path": "/compose"
      }
    },
    "onPublish": {
      "description": ["MQTT piping to Sensor model"],
      "accepts": [
        {
          "arg": "device",
          "type": "object",
          "required": true
        },
        {
          "arg": "attributes",
          "type": "object",
          "required": false
        },
        {
          "arg": "sensor",
          "type": "object",
          "required": false
        },
        {
          "arg": "client",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "sensor",
        "type": "object",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/on-publish"
      }
    },
    "handlePresentations": {
      "description": ["When HEAD method detected after parsing MQTT packet publish via MQTT"],
      "accepts": [
        {
          "arg": "device",
          "type": "object",
          "required": true
        },
        {
          "arg": "sensor",
          "type": "object",
          "required": true
        },
        {
          "arg": "encoded",
          "type": "object",
          "required": true
        }
      ],
      "http": {
        "verb": "post",
        "path": "/handle-presentations"
      }
    },
    "createOrUpdate": {
      "description": [
        "When POST || PUT method detected after parsing MQTT packet, save and publish via MQTT"
      ],
      "accepts": [
        {
          "arg": "device",
          "type": "object",
          "required": true
        },
        {
          "arg": "sensor",
          "type": "object",
          "required": true
        },
        {
          "arg": "encoded",
          "type": "object",
          "required": true
        }
      ],
      "http": {
        "verb": "post",
        "path": "/create-or-update"
      }
    },
    "getInstance": {
      "description": [
        "When GET method detected after parsing MQTT packet, find in cache and publish via MQTT"
      ],
      "accepts": [
        {
          "arg": "pattern",
          "type": "object",
          "required": true
        },
        {
          "arg": "sensor",
          "type": "object",
          "required": true
        }
      ],
      "http": {
        "verb": "post",
        "path": "/get-instance"
      }
    },
    "search": {
      "description": ["Find sensors from properties"],
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "sensors",
        "type": "array",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/search"
      }
    },
    "export": {
      "description": ["Export Sensors list from JSON to format selected ( default : csv )"],
      "accepts": [
        {
          "arg": "sensors",
          "type": "array",
          "required": true
        },
        {
          "arg": "filter",
          "type": "object",
          "required": false
        },
        {
          "arg": "format",
          "type": "string",
          "required": false
        }
      ],
      "returns": {
        "root": true,
        "type": "string"
      },
      "http": {
        "verb": "post",
        "path": "/export"
      }
    },
    "prototype.__get__resources": {
      "description": "Get the sensor resources",
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "get",
        "path": "/resources"
      }
    },
    "prototype.__findById__resources": {
      "description": "Get the sensor resource",
      "accepts": [
        {
          "arg": "fk",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "get",
        "path": "/resources/:fk"
      }
    },
    "prototype.__create__resources": {
      "description": "Create the sensor resource(s)",
      "accepts": [
        {
          "arg": "resources",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "post",
        "path": "/resources"
      }
    },
    "prototype.__replace__resources": {
      "description": "Replace the sensor resources",
      "accepts": [
        {
          "arg": "resources",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "put",
        "path": "/resources"
      }
    },
    "prototype.__delete__resources": {
      "description": "Delete the sensor resources",
      "returns": {
        "root": true,
        "type": "boolean"
      },
      "http": {
        "verb": "delete",
        "path": "/resources"
      }
    }
  }
}
