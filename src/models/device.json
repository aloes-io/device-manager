{
  "name": "Device",
  "base": "PersistedModel",
  "plural": "Devices",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "allowEternalTokens": true
  },
  "mixins": {},
  "properties": {
    "devEui": {
      "type": "string",
      "required": false,
      "default": null,
      "unique": true
    },
    "devAddr": {
      "type": "string",
      "required": false,
      "default": null
    },
    "apiKey": {
      "type": "string",
      "required": false
    },
    "name": {
      "type": "string",
      "required": false,
      "default": null
    },
    "type": {
      "type": "string",
      "required": false,
      "default": null
    },
    "status": {
      "type": "boolean",
      "default": false
    },
    "description": {
      "type": "string",
      "required": false
    },
    "icons": {
      "type": "array",
      "required": false,
      "default": [],
      "description": "urls pointing to icon image"
    },
    "accessPointUrl": {
      "type": "string",
      "required": false,
      "default": null
    },
    "frameCounter": {
      "type": "number",
      "required": true,
      "default": 0
    },
    "lastSignal": {
      "type": "date",
      "required": false
    },
    "qrCode": {
      "type": "string",
      "required": false,
      "default": null
    },
    "authMode": {
      "type": "string",
      "required": false,
      "default": null
    },
    "transportProtocol": {
      "type": "string",
      "required": true,
      "default": null
    },
    "transportProtocolVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "messageProtocol": {
      "type": "string",
      "required": true,
      "default": null
    },
    "messageProtocolVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "deleted": {
      "type": "boolean",
      "default": false
    }
  },
  "indexes": {},
  "protected": ["devEui", "appKey"],
  "hidden": ["deleted"],
  "validations": [],
  "relations": {
    "accessTokens": {
      "type": "hasMany",
      "model": "accessToken",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "deviceAddress": {
      "type": "hasOne",
      "model": "Address",
      "foreignKey": "deviceId"
    },
    "sensors": {
      "type": "hasMany",
      "model": "Sensor",
      "foreignKey": "deviceId"
    },
    "user": {
      "type": "belongsTo",
      "model": "user",
      "foreignKey": "ownerId",
      "options": {
        "nestRemoting": false
      }
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": [
        "create",
        "find",
        "findById",
        "replaceById",
        "replaceOrCreate",
        "updateById",
        "updateAttributes",
        "upsert",
        "exists",
        "search",
        "geoLocate",
        "createAuthLink",
        "__create__deviceAddress",
        "__get__deviceAddress",
        "__update__deviceAddress"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW",
      "property": [
        "replaceById",
        "destroyById",
        "replaceOrCreate",
        "updateById",
        "updateAttributes",
        "upsert",
        "exists",
        "delete",
        "refreshToken",
        "find",
        "findById",
        "__get__deviceAddress",
        "__update__deviceAddress",
        "__destroy__deviceAddress",
        "__updateById__sensors",
        "__destroyById__sensors",
        "__get__sensors"
      ]
    }
  ],
  "methods": {
    "onPublish": {
      "description": ["MQTT piping to Device model"],
      "accepts": [
        {
          "arg": "pattern",
          "type": "object",
          "required": true
        },
        {
          "arg": "packet",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "object"
      }
    },
    "search": {
      "description": ["Call the text search intern method"],
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "http": {
            "source": "context"
          }
        },
        {
          "arg": "filter",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "devices",
        "type": "array"
      },
      "http": {
        "verb": "post",
        "path": "/search"
      }
    },
    "geoLocate": {
      "description": ["Find user by geopoint in coordinates property"],
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "result",
        "type": "array"
      },
      "http": {
        "verb": "post",
        "path": "/geo-locate"
      }
    },
    "refreshToken": {
      "description": ["Refresh or create API key"],
      "accepts": [
        {
          "arg": "device",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "device",
        "type": "object"
      }
    },
    "createAuthLink": {
      "description": ["Generate a link to connect device to ambienz"],
      "accepts": [
        {
          "arg": "account",
          "type": "object",
          "required": true
        },
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        },
        {
          "arg": "method",
          "type": "string"
        }
      ],
      "returns": {
        "arg": "link",
        "type": "string"
      }
    }
  }
}
