{
  "name": "Device",
  "base": "PersistedModel",
  "plural": "Devices",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "allowEternalTokens": true
  },
  "mixins": {},
  "properties": {
    "name": {
      "type": "string",
      "required": true,
      "default": null
    },
    "type": {
      "type": "string",
      "required": true,
      "default": null
    },
    "status": {
      "type": "boolean",
      "default": false
    },
    "devEui": {
      "type": "string",
      "description": "external device Id (generated by device)",
      "required": true,
      "default": null,
      "unique": true
    },
    "apiKey": {
      "type": "string",
      "description": "internal device api key (generated by Aloes )",
      "required": false
    },
    "clientKey": {
      "type": "string",
      "required": false
    },
    "description": {
      "type": "string",
      "required": false
    },
    "icons": {
      "type": "array",
      "required": false,
      "default": [],
      "description": "urls pointing to icon image"
    },
    "accessPointUrl": {
      "type": "string",
      "required": false,
      "default": null
    },
    "frameCounter": {
      "type": "number",
      "required": true,
      "default": 0
    },
    "createdAt": {
      "type": "date",
      "required": false
    },
    "lastSignal": {
      "type": "date",
      "required": false
    },
    "qrCode": {
      "type": "string",
      "required": false,
      "default": null
    },
    "authMode": {
      "type": "string",
      "required": false,
      "default": null
    },
    "transportProtocol": {
      "type": "string",
      "required": true,
      "default": null
    },
    "transportProtocolVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "messageProtocol": {
      "type": "string",
      "required": true,
      "default": null
    },
    "messageProtocolVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "firmware": {
      "type": "string",
      "required": false,
      "default": null
    },
    "firmwareVersion": {
      "type": "string",
      "required": false,
      "default": null
    },
    "deleted": {
      "type": "boolean",
      "default": false
    },
    "clients": {
      "type": "array",
      "description": "A list of client ids authentified as this device",
      "default": []
    },
    "public": {
      "type": "boolean",
      "default": false
    }
  },
  "indexes": {},
  "protected": ["apiKey", "clients"],
  "hidden": ["deleted"],
  "validations": [],
  "relations": {
    "address": {
      "type": "hasOne",
      "model": "Address",
      "polymorphic": {
        "selector": "owner"
      },
      "options": {
        "nestRemoting": true
      }
    },
    "sensors": {
      "type": "hasMany",
      "model": "Sensor",
      "foreignKey": "deviceId"
    },
    "user": {
      "type": "belongsTo",
      "model": "user",
      "foreignKey": "ownerId",
      "options": {
        "nestRemoting": false
      }
    },
    "collaborators": {
      "type": "referencesMany",
      "description": "A list of users ids who have permissions to use this device",
      "model": "user",
      "foreignKey": "userIds",
      "options": {
        "validate": true,
        "forceId": false,
        "persistent": true
      },
      "default": []
    },
    "applications": {
      "type": "referencesMany",
      "description": "A list of application ids who have rights to listen device events",
      "model": "Application",
      "foreignKey": "appIds",
      "options": {
        "validate": true,
        "forceId": false,
        "persistent": true
      },
      "default": []
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW",
      "property": [
        "find",
        "findById",
        "count",
        "exists",
        "patchAttributes",
        "updateAttributes",
        "replaceAttributes",
        "replaceById",
        "destroyById",
        "deleteById",
        "delete",
        "onPublish",
        "__get__address",
        "__update__address",
        "__count__sensors",
        "__get__sensors",
        "__findById__sensors",
        "__updateById__sensors",
        "__destroyById__sensors",
        "__get__collaborators",
        "__create__collaborators",
        "__add__collaborators",
        "__findById__collaborators",
        "__updateById__collaborators",
        "__destroyById__collaborators",
        "__get__applications",
        "__create__applications",
        "__add__applications",
        "__findById__applications",
        "__updateById__applications",
        "__destroyById__applications"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": ["updateStatus", "authenticate", "getState", "getFullState", "getOTAUpdate"]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": [
        "create",
        "find",
        "count",
        "exists",
        "search",
        "export",
        "refreshToken",
        "geoLocate",
        "onPublish",
        "__get__address"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$collaborator",
      "permission": "ALLOW",
      "property": [
        "findById",
        "replaceById",
        "replaceOrCreate",
        "exists",
        "__get__address",
        "__get__sensors",
        "__findById__sensors"
      ]
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW",
      "property": [
        "replaceById",
        "destroyById",
        "deleteById",
        "replaceOrCreate",
        "updateById",
        "updateAttributes",
        "patchAttributes",
        "exists",
        "findById",
        "find",
        "__get__address",
        "__update__address",
        "__get__sensors",
        "__count__sensors",
        "__findById__sensors",
        "__updateById__sensors",
        "__destroyById__sensors",
        "__get__collaborators",
        "__create__collaborators",
        "__add__collaborators",
        "__findById__collaborators",
        "__updateById__collaborators",
        "__destroyById__collaborators",
        "__get__applications",
        "__create__applications",
        "__add__applications",
        "__findById__applications",
        "__updateById__applications",
        "__destroyById__applications"
      ]
    }
  ],
  "methods": {
    "onPublish": {
      "description": ["MQTT piping to Device model"],
      "accepts": [
        {
          "arg": "packet",
          "type": "object",
          "required": true
        },
        {
          "arg": "pattern",
          "type": "object",
          "required": true
        },
        {
          "arg": "client",
          "type": "object",
          "required": false
        }
      ],
      "returns": {
        "arg": "device",
        "type": "object",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/on-publish"
      }
    },
    "updateStatus": {
      "description": ["Update MQTT client attached to a device"],
      "accepts": [
        {
          "arg": "client",
          "type": "object",
          "required": true
        },
        {
          "arg": "status",
          "type": "boolean",
          "required": true
        }
      ],
      "returns": {
        "arg": "device",
        "type": "object",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/update-status"
      }
    },
    "search": {
      "description": ["Find devices from properties"],
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "devices",
        "type": "array",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/search"
      }
    },
    "geoLocate": {
      "description": ["Find device by geopoint in coordinates property"],
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": true
        }
      ],
      "returns": {
        "arg": "devices",
        "type": "array",
        "root": true
      },
      "http": {
        "verb": "post",
        "path": "/geo-locate"
      }
    },
    "refreshToken": {
      "description": ["Refresh or create API key"],
      "accepts": [
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        },
        {
          "arg": "ownerId",
          "type": "string",
          "required": false
        }
      ],
      "returns": {
        "arg": "device",
        "type": "object"
      },
      "http": {
        "verb": "post",
        "path": "/refresh-token/:deviceId"
      }
    },
    "authenticate": {
      "description": ["End point for device authentification with APIKey"],
      "accepts": [
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        },
        {
          "arg": "apiKey",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "string"
      },
      "http": {
        "verb": "post",
        "path": "/authenticate"
      }
    },
    "getState": {
      "description": ["End point for device requesting their own state"],
      "accepts": [
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        },
        { "arg": "options", "type": "object", "http": "optionsFromRequest" }
      ],
      "returns": {
        "root": true,
        "type": "string"
      },
      "http": {
        "verb": "get",
        "path": "/get-state/:deviceId"
      }
    },
    "getFullState": {
      "description": ["End point for device requesting their own state"],
      "accepts": [
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        }
      ],
      "returns": {
        "root": true,
        "type": "object"
      },
      "http": {
        "verb": "get",
        "path": "/get-full-state/:deviceId"
      }
    },
    "getOTAUpdate": {
      "description": [
        "Endpoint for device able to receive OTA update (.bin file must be present in device container)"
      ],
      "accepts": [
        {
          "arg": "ctx",
          "type": "object",
          "required": true,
          "http": {
            "source": "context"
          }
        },
        {
          "arg": "deviceId",
          "type": "string",
          "required": true
        },
        {
          "arg": "version",
          "type": "string"
        }
      ],
      "returns": {
        "type": "file",
        "root": true,
        "http": {
          "pipe": {
            "dest": "res"
          }
        }
      },
      "http": {
        "verb": "get",
        "path": "/get-ota-update/:deviceId"
      }
    },
    "export": {
      "description": ["Export Devices list from JSON to format selected ( default : csv )"],
      "accepts": [
        {
          "arg": "devices",
          "type": "array",
          "required": true
        },
        {
          "arg": "filter",
          "type": "object",
          "required": false
        },
        {
          "arg": "format",
          "type": "string",
          "required": false
        }
      ],
      "returns": {
        "root": true,
        "type": "string"
      },
      "http": {
        "verb": "post",
        "path": "/export"
      }
    }
  }
}
